name: 'app-backend-${APP_NAME}'

x-app-env: &app-env
  env_file: ../.env
  networks:
    - app-network

networks:
  app-network:
    driver: bridge

services:
  postgres:
    <<: *app-env
    image: postgres:17
    container_name: ${APP_NAME}-postgres
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  pgadmin:
    <<: *app-env
    image: dpage/pgadmin4:latest
    container_name: ${APP_NAME}-pgadmin
    ports:
      - '${PGADMIN_PORT}:80'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  backend:
    <<: *app-env
    image: node:24-alpine
    container_name: ${APP_NAME}-nest-server
    env_file: ../.env
    ports:
      - '${NEST_PORT}:${NEST_PORT}'
    working_dir: /usr/src/app
    volumes:
      - ../:/usr/src/app
      - nest-node_modules:/usr/src/app/node_modules
    command: sh -c "npm install && npm run start:dev"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pg-data:
    name: ${APP_NAME}-pg-data
  nest-node_modules:
    name: ${APP_NAME}-node_modules
  pgadmin-data:
    name: ${APP_NAME}-pgadmin-data
